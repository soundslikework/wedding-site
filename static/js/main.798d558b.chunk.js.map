{"version":3,"sources":["components/Container/index.js","components/Copy/index.js","components/Hero/index.js","components/Info/index.js","components/Location/index.js","components/Login/index.js","components/FAQ/index.js","components/Footer/index.js","scenes/Landing.js","App.js","serviceWorker.js","index.js","components/Container/Container.module.css","components/Copy/style.module.css"],"names":["Container","props","react_default","a","createElement","className","concat","styles","container","index","isEven","isOdd","children","Copy","copy","Hero","components_Container","components_Copy","Info","Location","Footer","Landing","components_Hero","components_Info","components_Location","Login","FAQ","components_Footer","Component","App","scenes_Landing","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"wPAUeA,EANG,SAACC,GAAD,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKC,IAAOC,UAAZ,KAAAF,OAAyBL,EAAMQ,MAAQ,IAAM,EAAIF,IAAOG,OAASH,IAAOI,QACjFV,EAAMW,2BCEAC,EAJF,SAACZ,GAAD,OACTC,EAAAC,EAAAC,cAAA,KAAGC,UAAWE,IAAOO,MAAOb,EAAMW,WCQvBG,EARF,SAACd,GACV,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,6ECKGC,EARF,SAACjB,GACV,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,mKCKGE,EARE,SAAClB,GACd,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,uQCKGE,EARE,SAAClB,GACd,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,wLCKGE,EARE,SAAClB,GACd,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,gGCKGG,EARA,SAACnB,GACZ,OACIC,EAAAC,EAAAC,cAACY,EAAD,CAAWP,MAAOR,EAAMQ,OACpBP,EAAAC,EAAAC,cAACa,EAAD,oDCgBGI,mLAbX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkB,EAAD,CAAMb,MAAO,IACbP,EAAAC,EAAAC,cAACmB,EAAD,CAAMd,MAAO,IACbP,EAAAC,EAAAC,cAACoB,EAAD,CAAUf,MAAO,IACjBP,EAAAC,EAAAC,cAACqB,EAAD,CAAOhB,MAAO,IACdP,EAAAC,EAAAC,cAACsB,EAAD,CAAKjB,MAAO,IACZP,EAAAC,EAAAC,cAACuB,EAAD,CAAQlB,MAAO,YATDmB,aCGPC,mLANX,OACE3B,EAAAC,EAAAC,cAAC0B,EAAD,aAHYF,aCQEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBC,EAAAC,QAAA,CAAkBxC,UAAA,6BAAAE,OAAA,0BAAAC,MAAA,6CCAlBoC,EAAAC,QAAA,CAAkBlC,KAAA","file":"static/js/main.798d558b.chunk.js","sourcesContent":["import React from 'react';\n\nimport styles from './Container.module.css';\n\nconst Container = (props) => (\n    <div className={`${styles.container} ${props.index % 2 === 0 ? styles.isEven : styles.isOdd }`}>\n        {props.children}\n    </div>\n);\n\nexport default Container;","import React from 'react';\n\nimport styles from './style.module.css';\n\nconst Copy = (props) => (\n    <p className={styles.copy}>{props.children}</p>\n);\n\nexport default Copy;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Hero = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>Hero. This will have a photo of us, a title, and a welcome message</Copy>\n        </Container>\n    );\n};\n\nexport default Hero;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Info = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>Info. This will have a short paragraph about our romance and relationship, a few photos of us and any other information for the wedding that's necessary</Copy>\n        </Container>\n    );\n};\n\nexport default Info;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Location = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>Location. This will have clear descriptions of where and when the wedding's taking place as well as a map to the Gladstone. It'll include contact info to book a room at the Gladstone and the other hotel we find for people who can't afford the Gladstone</Copy>\n        </Container>\n    );\n};\n\nexport default Location;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Location = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>Login. This will let people enter their email to access the google form or the login protected portion of the site to record their RSVP and food preference and request songs</Copy>\n        </Container>\n    );\n};\n\nexport default Location;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Location = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>FAQ. This will have info about the regsitry, our honeymoon, and any other information</Copy>\n        </Container>\n    );\n};\n\nexport default Location;","import React from 'react';\n\nimport Container from '../Container';\nimport Copy from '../Copy';\n\nconst Footer = (props) => {\n    return (\n        <Container index={props.index}>\n            <Copy>Contact and Footer. This'll have my email</Copy>\n        </Container>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport Hero from '../components/Hero'\nimport Info from '../components/Info'\nimport Location from '../components/Location'\nimport Login from '../components/Login'\nimport FAQ from '../components/FAQ'\nimport Footer from '../components/Footer'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Hero index={0} />\n        <Info index={1} />\n        <Location index={2} />\n        <Login index={3} />\n        <FAQ index={4} />\n        <Footer index={5} />\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from 'react';\n\nimport Landing from './scenes/Landing';\n\nclass App extends Component {\n  render() {\n    return (\n      <Landing />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tSdh\",\"isEven\":\"Container_isEven__2ZDJt\",\"isOdd\":\"Container_isOdd__SzWiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy\":\"style_copy__3ECuG\"};"],"sourceRoot":""}